	AD1	EQU	40H
	AD2	EQU	41H
	CF1	EQU	42H
	CF2	EQU	43H
	CF3	EQU	44H
	CF4	EQU	45H
	LIC1	EQU	46H
	LIC2	EQU	47H

	TEKST1	EQU	4050H
	TEKST2	EQU	4100H
	

	LJMP	START
	ORG	100H
START:
	ACALL 	CLICK_4_SIGNS
	ACALL	SPACE
	ACALL	READ_DEC1
	ACALL	WRITE_DEC1
	ACALL	SPACE
	ACALL	READ_DEC2
	ACALL	WRITE_DEC2
	MOV	R2, #8
	MOV	DPTR, #TEKST2
	ACALL	TEXT_L
	LCALL	WAIT_KEY
	LCALL	LCD_CLR
	ACALL	FIRST_VARIABLE
	MOV	A, #'+'
	LCALL	WRITE_DATA
	ACALL	SECOND_VARIABLE
	ACALL	EQUAL
	ACALL	DOD
	ACALL	SPACE
	ACALL	SPACE
	ACALL	SPACE
	ACALL	SPACE
	ACALL	SPACE
	ACALL	FIRST_VARIABLE
	MOV	A, #'-'
	LCALL	WRITE_DATA
	ACALL	SECOND_VARIABLE
	ACALL	EQUAL
	ACALL	ODE
	LCALL	WAIT_KEY
	LCALL	LCD_CLR
	ACALL	DEC_HEX1
	MOV	A, #'*'
	LCALL	WRITE_DATA
	ACALL	DEC_HEX2
	ACALL	EQUAL
	ACALL	MUL
	LCALL	WAIT_KEY
	LJMP	START

;===========================
MUL:
	MOV	A, LIC1
	MOV	B, A
	MOV	A, LIC2
	MUL	AB
	MOV	R1, A
	MOV	A, B
	LCALL	WRITE_HEX
	MOV	A, R1
	LCALL	WRITE_HEX
	LCALL 	WRITE_H
	RET
	
ODE:
	MOV	A, AD1		
	CLR	C		
	SUBB	A, AD2		
	JNC	ODEPLUS		
	CPL	A		
	ADD	A, #01h		
	MOV	R0, A		
	MOV	A, #'-'		
	LCALL	WRITE_DATA	
	ACALL	ODEPLUS		
	RET			

ODEPLUS:
	LCALL	WRITE_HEX	
	ACALL	WRITE_D		
	ACALL	SPACE		
	RET
DOD:
	MOV	A, AD1
	MOV	R0, A
	MOV	A, AD2
	ADD	A,R0
	LCALL	WRITE_HEX
	ACALL	WRITE_D
	RET
WRITE_DEC1:
	MOV	B, #10
	DIV	AB
	SWAP	A
	ORL	A,B
	MOV	AD1 ,A
	MOV	B, #73
	DIV	AB
	JNZ	READ_DEC1
	MOV	A, AD1
	LCALL	WRITE_HEX
	ACALL	WRITE_D
	RET

WRITE_DEC2:
	MOV	B, #10
	DIV	AB
	SWAP	A
	ORL	A,B
	MOV	AD2 ,A
	MOV	B, #73
	DIV	AB
	JNZ	READ_DEC2
	MOV	A, AD2
	LCALL	WRITE_HEX
	ACALL	WRITE_D
	RET
WRITE_D:
	MOV	A,#'d'
	LCALL	WRITE_DATA
	RET
DEC_HEX1:
	MOV	A, CF1
	MOV	B, #10
	MUL	AB
	MOV	R0, A
	MOV	A, CF2
	ADD	A, R0
	MOV	LIC1, A
	LCALL	WRITE_HEX
	ACALL	WRITE_H
	RET
DEC_HEX2:
	MOV	A, CF3
	MOV	B, #10
	MUL	AB
	MOV	R0, A
	MOV	A, CF4
	ADD	A, R0
	MOV	LIC2, A
	LCALL	WRITE_HEX
	ACALL	WRITE_H
	RET

READ_DEC1:
	LCALL	WAIT_KEY
	MOV	CF1, A
	MOV	B, #10
	MUL	AB
	MOV	R0, A
	LCALL	WAIT_KEY
	MOV	CF2, A
	ADD	A, R0
	RET
READ_DEC2:
	LCALL	WAIT_KEY
	MOV	CF3, A
	MOV	B, #10
	MUL	AB
	MOV	R0, A
	LCALL	WAIT_KEY
	MOV	CF4, A
	ADD	A, R0
	RET

	
EQUAL:
	MOV	A,#'='
	LCALL	WRITE_DATA
	RET

FIRST_VARIABLE:
	MOV	A, AD1
	LCALL	WRITE_HEX
	ACALL	WRITE_D
	RET
SECOND_VARIABLE:
	MOV	A, AD2
	LCALL	WRITE_HEX
	ACALL	WRITE_D
	RET

WRITE_H:
	MOV	A, #'h'
	LCALL	WRITE_DATA
	RET

CLICK_4_SIGNS:
	MOV	R2,#15
	MOV	DPTR, #TEKST1
	ACALL	TEXT_L
	RET
	
	
SPACE:
	MOV	A, #32
	LCALL	WRITE_DATA
	RET


TEXT_L:
	MOVX	A,@DPTR
	INC	DPTR
	LCALL	WRITE_DATA
	DJNZ	R2,TEXT_L
	RET

	ORG	TEKST1
	DB	"kliknij 4 znaki"
	ORG	TEKST2
	DB	" kliknij"
	
END