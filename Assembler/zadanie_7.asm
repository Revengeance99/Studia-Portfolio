	AD1	EQU	40H
	AD2	EQU	41H

	TEKST1	EQU	4050H
	TEKST2	EQU	4100H
	TEKST3	EQU	4150H
	TEKST4	EQU	4200H
	TEKST5	EQU	4250H

	LJMP	START
	ORG	100H
START:
	ACALL 	CLICK_4_SIGNS
	ACALL	SPACE
	ACALL	READ_HEX
	MOV	AD1, A
	ACALL 	READ_HEX
	MOV	AD2, A
	LCALL	LCD_CLR
	ACALL	FIRST_VARIABLE
	MOV	R2, #2
	MOV	DPTR, #TEKST2
	ACALL	TEXT_L 
	ACALL	SECOND_VARIABLE
	ACALL	EQUAL
	
;============ILOCZYN LOGICZNY==========

MOV	A, AD1
	MOV	B, A
	MOV	A, AD2
	ANL	A,B
	LCALL	WRITE_HEX
	ACALL	WRITE_H
	MOV	R2, #19
	MOV	DPTR, #TEKST4
	ACALL	TEXT_L
	LCALL	WAIT_KEY
	LCALL	LCD_CLR	
	
	
;=======================================
	ACALL	FIRST_VARIABLE
	MOV	R2, #2
	MOV	DPTR, #TEKST3
	ACALL	TEXT_L 
	ACALL	SECOND_VARIABLE
	ACALL	EQUAL

;===============SUMA LOGICZNA===========
	MOV	A, AD1
	MOV	B, A
	MOV	A, AD2
	ORL	A,B
	LCALL	WRITE_HEX
	ACALL	WRITE_H
	MOV	R2, #19
	MOV	DPTR, #TEKST5
	ACALL	TEXT_L
	LCALL	WAIT_KEY
	LCALL	LCD_CLR
	LJMP	START

;====================================
EQUAL:
	MOV	A,#'='
	LCALL	WRITE_DATA
	RET

FIRST_VARIABLE:
	MOV	A, AD1
	LCALL	WRITE_HEX
	ACALL	WRITE_H
	RET
SECOND_VARIABLE:
	MOV	A, AD2
	LCALL	WRITE_HEX
	ACALL	WRITE_H
	RET

WRITE_H:
	MOV	A, #'h'
	LCALL	WRITE_DATA
	RET

CLICK_4_SIGNS:
	MOV	R2,#15
	MOV	DPTR, #TEKST1
	ACALL	TEXT_L
	RET
	
	
SPACE:
	MOV	A, #32
	LCALL	WRITE_DATA
	RET

READ_HEX:
	LCALL	WAIT_KEY
	SWAP	A
	MOV	B, A
	LCALL	WAIT_KEY
	ORL	A, B
	RET
TEXT_L:
	MOVX	A,@DPTR
	INC	DPTR
	LCALL	WRITE_DATA
	DJNZ	R2,TEXT_L
	RET

	ORG	TEKST1
	DB	"kliknij 4 znaki"
	ORG	TEKST2
	DB	"&&"
	ORG	TEKST3
	DB	"||"
	ORG	TEKST4
	DB	"    1.PRESS ANY KEY"
	ORG	TEKST5
	DB	"    2.PRESS ANY KEY"
END