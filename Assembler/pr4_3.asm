	AD1	EQU	40H
	AD2	EQU	41H
	AD3	EQU	42H	
	AD4	EQU	43H
	TEKST1	EQU	4050H
	TEKST2	EQU	4100H

	LJMP	START
	ORG	100H
START:
	ACALL 	KLIKNIJ4
	ACALL	SPACE
	ACALL	READ_DEC
	MOV	AD1, A
	ACALL	WRITE_DEC2
	ACALL	SPACE
	ACALL 	READ_DEC
	MOV	AD2, A
	ACALL	WRITE_DEC2
	ACALL	SPACE
	ACALL	KLIKNIJ
	LCALL	WAIT_KEY
	LCALL	LCD_CLR
	ACALL	FZMIENNA
	MOV	A, #'+'
	LCALL	WRITE_DATA
	ACALL	SZMIENNA
	ACALL	EQUAL
	CLR	C		
	MOV	A, AD1
	ADD	A, AD2
	MOV	AD3, A		
	JNC	EE		
	MOV	A, #'1'
	LCALL	WRITE_DATA
	AJMP	EE1
EE:	ACALL	SPACE		
EE1:	MOV	A, AD3		
	ACALL	WRITE_DEC
	ACALL	SPACE
	ACALL	SPACE
	ACALL	SPACE
	ACALL	SPACE
	ACALL 	FZMIENNA
	MOV	A, #'-'
	LCALL	WRITE_DATA
	ACALL	SZMIENNA
	ACALL	EQUAL
	MOV 	A, AD1
	CLR	C
	SUBB	A, AD2
	JNC	ODE
	CPL	A
	ADD	A, #01H
	MOV	R0, A
	MOV	A, #'-'
	LCALL	WRITE_DATA
	MOV	A, R0
	ACALL	WRITE_DEC
	LCALL	WAIT_KEY
	ACALL	SPACE
	ACALL	SPACE
	ACALL	SPACE
	ACALL	SPACE
	LCALL	LCD_CLR
MLP:	
	ACALL	FZ_HEX
	MOV	A, #'*'
	LCALL	WRITE_DATA
	ACALL	SZ_HEX
	ACALL	EQUAL
	MOV	A, AD1
	MOV	B, A
	MOV	A, AD2
	MUL	AB
	MOV	R1, A
	MOV	A, B
	LCALL	WRITE_HEX
	MOV	A, R1
	LCALL	WRITE_HEX
	ACALL	H
	ACALL	SPACE
	ACALL	SPACE
	ACALL	SPACE
	ACALL	FZMIENNA
	MOV	A, #':'
	LCALL	WRITE_DATA
	ACALL	SZMIENNA
	ACALL	EQUAL
	MOV	A, AD2
	MOV	B, A
	MOV	A, AD1
	DIV	AB		
	MOV	R0, B
	ACALL	WRITE_DEC
	MOV	A, R0
	JZ	RESZTA_ZERO
	ACALL	SPACE
	MOV	A, #'r'
	LCALL	WRITE_DATA
	MOV	A, R0
	ACALL	WRITE_DEC
RESZTA_ZERO:
	LCALL	WAIT_KEY
	LCALL	LCD_CLR
	LJMP	START
ODE:
	LCALL	WRITE_HEX
	ACALL	H
	LCALL	WAIT_KEY
	LCALL	LCD_CLR
	LJMP 	MLP
EQUAL:
	MOV	A,#'='
	LCALL	WRITE_DATA
	RET
FZ_HEX:
	MOV	A, AD1
	LCALL	WRITE_HEX
	ACALL	H
	RET
SZ_HEX:
	MOV	A, AD2
	LCALL	WRITE_HEX
	ACALL	H
	RET
FZMIENNA:
	MOV	A, AD1
	ACALL	WRITE_DEC
	RET
SZMIENNA:
	MOV	A, AD2
	ACALL	WRITE_DEC
	RET
H:
	MOV	A, #'h'
	LCALL	WRITE_DATA
	RET
KLIKNIJ:
	MOV	R2, #7
	MOV	DPTR, #TEKST1
	ACALL	TEXT_L
	RET
KLIKNIJ4:
	MOV	R2,#15
	MOV	DPTR, #TEKST2
	ACALL	TEXT_L
	RET
SPACE:
	MOV	A, #32
	LCALL	WRITE_DATA
	RET
READ_DEC:
	LCALL	WAIT_KEY
	MOV	B, #10
	MUL	AB
	MOV	R0, A
	LCALL	WAIT_KEY
	ADD	A,R0
	RET
READ_DEC2:
	LCALL	WAIT_KEY
	MOV	B, #10
	MUL	AB
	MOV	R0, A
	LCALL	WAIT_KEY
	ADD	A,R0
WRITE_DEC2:
	MOV	B, #10
	DIV	AB
	SWAP	A
	ORL	A,B
	MOV	AD4, A
	MOV	B, #49h
	DIV	AB
	JNZ	READ_DEC2
	MOV	A, AD4
	LCALL	WRITE_HEX
	MOV	A, #'d'
	LCALL	WRITE_DATA
	RET

WRITE_DEC:
	MOV	B, #10
	DIV	AB
	SWAP	A
	ORL	A,B
	LCALL	WRITE_HEX
	MOV	A, #'d'
	LCALL	WRITE_DATA
	RET
TEXT_L:
	MOVX	A,@DPTR
	INC	DPTR
	LCALL	WRITE_DATA
	DJNZ	R2,TEXT_L
	RET
	ORG	TEKST1
	DB	"kliknij"
	ORG	TEKST2
	DB	"kliknij 4 znaki"
END
	